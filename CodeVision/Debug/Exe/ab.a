;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 3/28/2021
;Author  :
;Company :
;Comments:
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;float buttons(float);
;void main(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001D float f = 0.01;
; 0000 001E float ftemp;
; 0000 001F DDRA = 0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;	f -> Y+4
;	ftemp -> Y+0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0020 PORTA = 0xFF;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0021 DDRC = 0xFF;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022 PORTC = 0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0023 
; 0000 0024 f = buttons(f);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0025 
; 0000 0026 while (1)
;PCODE: $00000022 VOL: 0
; 0000 0027       {
; 0000 0028 
; 0000 0029       //start
; 0000 002A       if(PINA.0==0){
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002B           while(1){
;PCODE: $00000026 VOL: 0
; 0000 002C           //100HZ
; 0000 002D               PORTC = 0b00000000;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002E               delay_ms(f);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002F               PORTC = 0b00000001;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0030               delay_ms(f);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0031               ftemp = buttons(f);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0032               if(ftemp != f){
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0033                 f = ftemp;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0034                 break;
;PCODE: $0000003C VOL: 0
; 0000 0035               }
; 0000 0036           }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0037       }
; 0000 0038 
; 0000 0039       }
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003A }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;float buttons(float f0){
; 0000 003B float buttons(float f0){
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003C     //250HZ
; 0000 003D      if(PINA.2==0){
;PCODE: $00000049 VOL: 0
;	f0 -> Y+0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 003E      return 2;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 003F      }
; 0000 0040      //500Hz
; 0000 0041      if(PINA.3==0){
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0042      return 1;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0043      }
; 0000 0044      //1000Hz
; 0000 0045      if(PINA.4==0){
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0046      return 0.5;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0047      }
; 0000 0048      //100HZ
; 0000 0049      if(PINA.1==0){
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 004A      return 5;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 004B      }
; 0000 004C      else{
;PCODE: $00000065 VOL: 0
; 0000 004D      return f0;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 004E      }
;PCODE: $00000069 VOL: 0
; 0000 004F }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
